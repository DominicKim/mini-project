# channels
agent.channels = validCh invalidCh

agent.channels.validCh.type = memory
agent.channels.validCh.capacity = 1000000
agent.channels.validCh.transactionCapacity = 1000

agent.channels.invalidCh.type = memory
agent.channels.invalidCh.capacity = 1000000
agent.channels.invalidCh.transactionCapacity = 1000


# sources
agent.sources = spoolLogDir

agent.sources.spoolLogDir.type = spooldir
agent.sources.spoolLogDir.spoolDir = /data1/dominic/trafficLogs/spooldir
agent.sources.spoolLogDir.fileHeader = true
agent.sources.spoolLogDir.channels = validCh invalidCh
agent.sources.spoolLogDir.deletePolicy = immediate

agent.sources.spoolLogDir.interceptors = i1 i2
agent.sources.spoolLogDir.interceptors.i1.type = com.nexr.traffic.flume.interceptor.TrafficDedupInterceptor$Builder
agent.sources.spoolLogDir.interceptors.i1.cache.size = 100
agent.sources.spoolLogDir.interceptors.i2.type = com.nexr.traffic.flume.interceptor.TrafficLogRegexValidatorInterceptor$Builder
agent.sources.spoolLogDir.interceptors.i2.regex = ^([\\d]{4}-[\\d]{2}-[\\d]{2}\\s[\\d]{2}:[\\d]{2}:[\\d]{2}),(ROAD_[0-9]+),(CAM_[0-9]+),([0-9]{2}[A-Z]{2}[0-9]{4}\\^[0-9]+\\|?)+

agent.sources.spoolLogDir.selector.type = multiplexing
agent.sources.spoolLogDir.selector.header = validation
agent.sources.spoolLogDir.selector.mapping.valid = validCh
agent.sources.spoolLogDir.selector.mapping.invalid = invalidCh
agent.sources.spoolLogDir.selector.default = validCh


# sinks
agent.sinks = primaryAvroSink backupAvroSink invalidSink

agent.sinks.primaryAvroSink.type = avro
agent.sinks.primaryAvroSink.hostname = 172.27.248.50
agent.sinks.primaryAvroSink.port = 4545
agent.sinks.primaryAvroSink.batch-size = 100
agent.sinks.primaryAvroSink.channel = validCh

agent.sinks.backupAvroSink.type = avro
agent.sinks.backupAvroSink.hostname = 172.27.54.60
agent.sinks.backupAvroSink.port = 4545
agent.sinks.backupAvroSink.batch-size = 100
agent.sinks.backupAvroSink.channel = validCh

agent.sinks.invalidSink.type = hdfs
agent.sinks.invalidSink.hdfs.path = hdfs://172.27.232.198:9000/user/ndap/repository/user/dominic/traffic/invalid_logs
agent.sinks.invalidSink.hdfs.fileType = SequenceFile
agent.sinks.invalidSink.hdfs.codeC = gzip
agent.sinks.invalidSink.hdfs.writeFormat = Text
agent.sinks.invalidSink.hdfs.rollSize = 314572800
agent.sinks.invalidSink.hdfs.rollCount = 0
agent.sinks.invalidSink.hdfs.rollInterval = 3600
agent.sinks.invalidSink.hdfs.batchSize = 100
agent.sinks.invalidSink.hdfs.txnEventMax = 1000
agent.sinks.invalidSink.hdfs.idleTimeout = 120
agent.sinks.invalidSink.hdfs.inUsePrefix = .
agent.sinks.invalidSink.channel = invalidCh

# sink groups for failover
agent.sinkgroups = failoverGroup
agent.sinkgroups.failoverGroup.sinks = primaryAvroSink backupAvroSink
agent.sinkgroups.failoverGroup.processor.type = failover
agent.sinkgroups.failoverGroup.processor.priority.primaryAvroSink = 10
agent.sinkgroups.failoverGroup.processor.priority.backupAvroSink = 5
agent.sinkgroups.failoverGroup.processor.maxpenalty = 10000
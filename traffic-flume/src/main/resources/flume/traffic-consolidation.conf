# channels
agent.channels = memChHdfs memChHbase

agent.channels.memChHdfs.type = memory
agent.channels.memChHdfs.capacity = 1000000
agent.channels.memChHdfs.transactionCapacity = 1000000

agent.channels.memChHbase.type = memory
agent.channels.memChHbase.capacity = 1000000
agent.channels.memChHbase.transactionCapacity = 1000000


# sources
agent.sources = avroSrc

agent.sources.avroSrc.type = avro
agent.sources.avroSrc.bind = 172.27.248.50  #172.27.54.60
agent.sources.avroSrc.port = 4545

agent.sources.avroSrc.selector.type = replicating
agent.sources.avroSrc.channels = memChHdfs memChHbase

agent.sources.avroSrc.interceptors = i1 i2
agent.sources.avroSrc.interceptors.i1.type = com.nexr.traffic.flume.interceptor.TrafficLogExtractInterceptor$Builder
agent.sources.avroSrc.interceptors.i2.type = com.nexr.traffic.flume.interceptor.TrafficHiveAddPartitionInterceptor$Builder
agent.sources.avroSrc.interceptors.i2.hdfs.path = /user/ndap/repository/user/dominic/traffic/
agent.sources.avroSrc.interceptors.i2.hive.jdbcUrl = jdbc:hive2://172.27.155.92:10000
agent.sources.avroSrc.interceptors.i2.hive.database = dominic
agent.sources.avroSrc.interceptors.i2.hive.table = hive_traffic


# sinks
agent.sinks = hdfsSink hbaseSink hbaseSink2 hbaseOverSpeedSink

agent.sinks.hdfsSink.type = hdfs
agent.sinks.hdfsSink.hdfs.path = hdfs://PSEDU2:9000/user/ndap/repository/user/dominic/traffic/%{date}/%{hour}
agent.sinks.hdfsSink.hdfs.fileType = SequenceFile
agent.sinks.hdfsSink.hdfs.codeC = gzip
agent.sinks.hdfsSink.hdfs.writeFormat = Text
agent.sinks.hdfsSink.hdfs.rollSize = 314572800
agent.sinks.hdfsSink.hdfs.rollCount = 0
agent.sinks.hdfsSink.hdfs.rollInterval = 3600
agent.sinks.hdfsSink.hdfs.batchSize = 100
agent.sinks.hdfsSink.hdfs.txnEventMax = 100
agent.sinks.hdfsSink.hdfs.idleTimeout = 120
agent.sinks.hdfsSink.hdfs.callTimeout = 20000
agent.sinks.hdfsSink.hdfs.inUsePrefix = .
agent.sinks.hdfsSink.channel = memChHdfs

agent.sinks.hbaseSink.type = hbase
agent.sinks.hbaseSink.table = hbase_traffic
agent.sinks.hbaseSink.columnFamily = cf
agent.sinks.hbaseSink.batchSize = 100
agent.sinks.hbaseSink.serializer = com.nexr.traffic.flume.serializer.TrafficHbaseEventSerializer
agent.sinks.hbaseSink.serializer.overspeed = 80
agent.sinks.hbaseSink.channel = memChHbase

agent.sinks.hbaseSink2.type = hbase
agent.sinks.hbaseSink2.table = hbase_traffic
agent.sinks.hbaseSink2.columnFamily = cf
agent.sinks.hbaseSink2.batchSize = 100
agent.sinks.hbaseSink2.serializer = com.nexr.traffic.flume.serializer.TrafficHbaseEventSerializer
agent.sinks.hbaseSink2.serializer.overspeed = 80
agent.sinks.hbaseSink2.channel = memChHbase

agent.sinks.hbaseOverSpeedSink.type = hbase
agent.sinks.hbaseOverSpeedSink.table = hbase_overspeed
agent.sinks.hbaseOverSpeedSink.columnFamily = cf
agent.sinks.hbaseOverSpeedSink.batchSize = 100
agent.sinks.hbaseOverSpeedSink.serializer = com.nexr.traffic.flume.serializer.TrafficHbaseOverspeedEventSerializer
agent.sinks.hbaseOverSpeedSink.serializer.overspeed = 80
agent.sinks.hbaseOverSpeedSink.channel = memChHbase

# hbase sink group for load balancing
agent.sinkgroups = hbaseLBGroup
agent.sinkgroups.hbaseLBGroup.sinks = hbaseSink hbaseSink2
agent.sinkgroups.hbaseLBGroup.processor.type = load_balance
agent.sinkgroups.hbaseLBGroup.processor.backoff = true
agent.sinkgroups.hbaseLBGroup.processor.selector = random
